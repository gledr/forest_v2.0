test:
	@forest ./short/config.xml                       # Short datatype
	@forest ./eight/config.xml                       # Eight test
	@forest ./array/config.xml                       # Array indexing
	@forest ./division/config.xml                    # Division
	@forest ./fnarray/config.xml                     # Pointer passed to function
	@forest ./forloop/config.xml                     # a for loop
	@forest ./float/config.xml                       # Real operations
	@forest ./floatint/config.xml                    # Mixing float and real operations
	@forest ./struct/config.xml                      # Structs
	@forest ./global/config.xml                      # global variables
	@forest ./shift/config.xml                       # Shift operations
	@forest ./wired_bool/config.xml                  # Wired boolean operations
	@forest ./wired_bool_twice/config.xml            # Performing two wired boolean operations
	@forest ./wired_bool_twice_2/config.xml          # Performing two wired boolean operations
	@forest ./bool_not_in_cond/config.xml            # Boolean operation not implied in condition
	@forest ./array2d/config.xml                     # 2D array indexing
	@forest ./array_struct/config.xml                # Array of struct
	@forest ./array_struct_global/config.xml         # Array of global struct
	@forest ./pointerincrement/config.xml            # incrementing a pointer
	@forest ./force_free/config.xml                  # Force a variable to be free
	@forest ./force_free_local/config.xml            # Force a local variable to be free
	@forest ./force_free_fn/config.xml               # Force a variable to be free with a function
	@forest ./force_free_and_modify/config.xml       # Force a variable to be free and modify it
	@forest ./globals_always_free/config.xml         # Test making globals always free
	@forest ./cmdargs/config.xml                     # command line arguments test
	@forest ./pointernull/config.xml                 # Pointer to null
	@forest ./extern/config.xml                      # External declaration
	@forest ./gl_pointer_init/config.xml             # Global pointer initialization
	@forest ./gl_pointer_init_offset/config.xml      # Global pointer initialization with offset
	@forest ./switch/config.xml                      # Switch statement
	@forest ./voidfn/config.xml                      # Void function call 
	@forest ./cmp_str_zero/config.xml                # Compare string to zero
	@forest ./arg_constant/config.xml                # propagation of constant through function parameters
	@forest ./align_struct/config.xml                # struct fields alignment
	@forest ./prop_const_stack/config.xml            # Propagation of constants in the stack
	@forest ./outofbouds/config.xml                  # Access out of bounds
	@forest ./strcmp/config.xml                      # string comparison
	@forest ./non_annotated_twice/config.xml         # calling a system function twice
	@forest ./andconstant/config.xml                 # AND with constant
	@forest ./orconstant/config.xml                  # OR with constant
	@forest ./not/config.xml                         # NOT operator
	@forest ./non_annotated_n/config.xml             # Calling a non-annotated function n times
	@forest ./and_bool/config.xml                    # ANDing two boolean variables
	@forest ./overflow/config.xml                    # Overflow detection
	@forest ./deref_variable/config.xml              # Dereferencing a pointer with a free variable
	@forest ./deref_variable_store/config.xml        # Dereferencing a pointer with a free variable in store
	@forest ./deref_variable_double/config.xml       # Double dereference with a free variable
	@forest ./deref_variable_double_2/config.xml     # Double dereference with a free variable
	@forest ./probem_mod/config.xml                  # Avoids problematic module 0
	@forest ./type_of_constant/config.xml            # Problem with type when assigning a constant value
	@forest ./array_of_strings/config.xml            # Array of Strings
	@forest ./init_local_array/config.xml            # Initialize a local array
	@forest ./double_cast/config.xml                 # Double casting
	@forest ./cast_i16_to_i32/config.xml             # Casting i16 to i32
	@forest ./force_free_hint/config.xml             # force_free_hint
	@forest ./force_free_hint_global/config.xml      # force_free global
	@forest ./recursive/config.xml                   # Recursive call
	@forest ./alloc/config.xml                       # Allocation function
	@forest ./alloc_int/config.xml                   # Allocation of int instead of char
	@forest ./alloc_outofbounds/config.xml           # Access out of bounds in heap
	@forest ./alloc_outofbounds_dynamic/config.xml   # Access out of bounds in heap with dynamic index
	@forest ./alloc_range/config.xml                 # Allocation ranges
	@forest ./fn_pointer/config.xml                  # Calling function through a pointer
	@forest ./random_init/config.xml                 # Random initialization of array
